#!/bin/bash
#
# Init file for Pivotal Redis Server
#
# chkconfig: 35 70 75
# description: Pivotal Redis Server
#
# processname: redis-server
# config: /etc/opt/pivotal/pivotal-redis/redis-6379.conf
# pidfile: /var/opt/pivotal/pivotal-redis/run/redis-6379.pid

# source function library
. /etc/rc.d/init.d/functions

RETVAL=0
PROG="redis-server"

PORT=<%= @listen_port %>
REDIS_USER=<%= @owner %>
REDIS_SERVER=/opt/pivotal/pivotal-redis/bin/redis-server
REDIS_CLI=/opt/pivotal/pivotal-redis/bin/redis-cli
REDIS_CONF=/etc/opt/pivotal/pivotal-redis/redis-${PORT}.conf
REDIS_PID=/var/opt/pivotal/pivotal-redis/run/redis-${PORT}.pid

check_status() {
   # Use status function from sourced functions to get state
   status -p $REDIS_PID > /dev/null
   STATUS_VAL=$?
   echo $STATUS_VAL
}

start() {
   case "`check_status`" in
      0) echo "$PROG already running"
         failure
         RETVAL=1
         echo ;;
      1|2) echo "PID file $REDIS_PID exists, but $PROG not running."
         #failure
         /bin/su $REDIS_USER -c "$REDIS_SERVER $REDIS_CONF" && success || failure
         RETVAL=$?
         echo ;;
      3) echo -n $"Starting $prog: "
         /bin/su $REDIS_USER -c "$REDIS_SERVER $REDIS_CONF" && success || failure
         RETVAL=$?
         echo ;;
   esac
}


stop()
{
   case "`check_status`" in
      0) echo -n $"Stopping $prog: "
         kill `cat $REDIS_PID`
         while [ "`check_status`" = "0" ]; do
            echo "Waiting for $PROG to shutdown"
            sleep 1
         done && success || failure
         RETVAL=$?
         echo ;;
      1|2) echo "PID file $REDIS_PID exists, but $PROG not running"
         failure
         RETVAL=1
         echo ;;
      3) echo "$PROG is already stopped" 
         success
         RETVAL=0
         echo ;;
   esac
}

case "$1" in
        start)
                start
                ;;
        stop)
                stop
                ;;
        restart)
                stop
                start
                ;;
        status)
                status -p $REDIS_PID $PROG
                RETVAL=$?
                ;;
        *)
                echo $"Usage: $0 {start|stop|restart|status}"
                RETVAL=1
esac
exit $RETVAL

